[tox]
minversion = 4.28.4
envlist = py313, mypy, ruff
isolated_build = true

[gh-actions]
python =
    3.13: py313, mypy, ruff

[testenv]
setenv =
    PYTHONPATH =
deps =
    build
    -r{toxinidir}/requirements_dev.txt
    pytest

[testenv:py313]
changedir = {envtmpdir}
commands_pre =
    python -c "import shutil; shutil.rmtree('{toxinidir}/dist', ignore_errors=True)"
    python -m build --sdist --wheel --outdir {toxinidir}/dist {toxinidir}
    python -c 'import shutil, os; src=os.path.join("{toxinidir}", "tests"); dst="tests"; shutil.copytree(src, dst, dirs_exist_ok=True) if os.path.abspath(src) != os.path.abspath(dst) else print("Skipping self-copy")'
    python -c 'import shutil; shutil.copytree("{toxinidir}/chipiron/scripts", "chipiron/scripts", dirs_exist_ok=True)'
    python -c 'import shutil, os; src="{toxinidir}/tests/data/trees"; dst="external_data/trees"; shutil.copytree(src, dst, dirs_exist_ok=True) if os.path.exists(src) else print(f"Skipping copy: {src} does not exist")'

    python -c "import os; print(os.listdir('{toxinidir}/dist'))"
    python -c "import glob, subprocess; subprocess.check_call(['pip', 'install', glob.glob('{toxinidir}/dist/*.tar.gz')[0]])"
commands =
    python -c "import chipiron; print(chipiron.__file__)"
    pytest --pyargs chipiron --basetemp={envtmpdir}/pytest-tmp --ignore=chipiron/scripts/script_gui/test/test_script_gui.py --ignore=chipiron/players/boardevaluators/table_base/test_syzygy.py {posargs}

[testenv:mypy]
basepython = python3.13
deps =
    -r{toxinidir}/requirements_dev.txt
    mypy>=1.17.1
commands =
    mypy --strict chipiron

[testenv:ruff]
basepython = python3.13
deps =
    -r{toxinidir}/requirements_dev.txt
    ruff>=0.12.11
commands =
    # Format code like Black
    ruff format --check chipiron
    # Lint + autofix (removes unused imports, sorts imports, etc.)
    ruff check --fix chipiron
